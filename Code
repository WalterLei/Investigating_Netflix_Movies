# Importing pandas and matplotlib
import pandas as pd
import matplotlib.pyplot as plt

# Start coding!
#Create a DataFrame from a csv and inspect the Netflix data
netflix = pd.read_csv('netflix_data.csv')
print(netflix.head())
print(netflix['type'].unique())

#Filter "TV shows" and subset the DF for "Movies"
movies = netflix[netflix['type'] == 'Movie']

#Subset the columns of the new DF
netflix_movies = movies[['title','country','genre','release_year','duration']]
fig = plt.figure(figsize=(12,8))
plt.scatter(x=netflix_movies['release_year'],y=netflix_movies['duration'])
plt.xlabel('Release year')
plt.ylabel('Duration (min)')
plt.title('Movie Duration by Year of Release')
plt.show()

# We can see that newer movies are overrepresented on Netflix, many short movies have been released in the past two decades.
# Upon further investigation I found that some films are less than an hour long. Let's filter our DataFrame for movies with duration under 60 minutes and see if there are anything in common.
# This might give us some insights.

#Filter DF by Movie duration
short_movies = netflix_movies[netflix_movies['duration'] < 60]
print(short_movies.head(20))
display(short_movies)
plt.scatter(x=short_movies['release_year'],y=short_movies['duration'])
plt.show()
plt.scatter(x=short_movies['duration'],y=short_movies['genre'])
plt.show()

#It seems that many of the films that are under 60 minutes fall into genres such as "Children", "Stand-up" and "Documentaries". This makes sense as these genres are usually less than 90 minutes.
#We should eliminate these rows from our DataFrame and plot the values again. But first we should explore the effect of these genres on our data by marking them with a different color for visualisation.

#In Python, there are many ways to do this, but one fun way might be to use a loop to generate a list of colors based on the contents of the <code>genre</code> column. Much as we did in Intermediate Python, we can then pass this list to our plotting function in a later step to color all non-typical genres in a different color!

#Create a list of colors based on movie genres
colors =[]

for lab, row in netflix_movies.iterrows():
    if row['genre'] == 'Children':
        colors.append('green')
    elif row['genre'] == 'Documentaries':
        colors.append('blue')
    elif row['genre'] == 'Stand-Up':
       colors.append('red')
    else:
        colors.append('black')

#We now have a <code>colors</code> list that we can pass to our scatter plot, which should allow us to visually inspect whether these genres might be responsible for shorter movie duration.      
fig = plt.figure(figsize=(12,8))
plt.scatter(x=netflix_movies['release_year'],y=netflix_movies['duration'],c=colors)
plt.xlabel('Release year')
plt.ylabel('Duration (min)')
plt.title('Movie Duration by Year of Release')
plt.show()

#Well, as we suspected, non-typical genres such as children's movies and documentaries are all clustered around the bottom half of the plot. 

#Filter the three top short movie genres 'Children','Documentaries' and 'Stand-Up' and see if there is a huge difference in visualisation
updated_movies = netflix_movies[~netflix_movies['genre'].isin(['Children','Documentaris','Stand-Up'])]
fig = plt.figure(figsize=(12,8))
plt.scatter(x=updated_movies['release_year'],y=updated_movies['duration'])
plt.xlabel('Release year')
plt.ylabel('Duration (min)')
plt.title('Movie Duration by Year of Release')
plt.show()

#There are still a lot of short movies after filtering certain genres. We can't know for certain until we perform additional analyses. 
answer = 'maybe'
